import { useRouter } from 'next/router'
import type { NextPage } from 'next'
import Head from 'next/head'
import { PrimaryButton } from '../components/atoms/Button';
import { Input } from '../components/atoms/Input';
import { Flex, Stack } from '@chakra-ui/react';
import { SubmitHandler, useForm } from 'react-hook-form';
import * as yup from 'yup';
import { yupResolver } from '@hookform/resolvers/yup';

interface SignInFormData {
  email: string;
  password: string;
}

const signInFormchema = yup.object().shape({
  email: yup.string().required('Mensagem de campo obrigatório').email('Mensagem de email inválido'),
  password: yup.string().required('Mensagem de campo obrigatório').min(6, 'Sua senha deve conter no mínimo 6 caracteres'),
})

const Home: NextPage = () => {
  const router = useRouter();

  const {register, handleSubmit, formState} = useForm({
    resolver: yupResolver(signInFormchema)
  });
  const { errors } = formState;

  const handleSignIn: SubmitHandler<SignInFormData> = async (data) => {
    await new Promise(resolve => setTimeout(resolve, 2000));

    console.log(data);
    router.push('/dashboard');
  }

  return (
    <>
      <Head>
        <title>Chakra UI | Next | TypeScrypt</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Flex
        w="100vw"
        h="100vh"
        align="center"
        justify="center">
        
        <Flex
          as="form"
          w="100%"
          maxW="400px"
          justify="center"
          borderRadius="8px"
          flexDir="column"
          onSubmit={handleSubmit(handleSignIn)}>

          <Stack spacing="4">
            <Input
              nameText="email"
              type="email"
              label="E-mail"
              error={errors.email}
              {...register('email')}
            />

            <Input
              nameText="password"
              type="password"
              label="Senha"
              error={errors.password}
              {...register('password')}
            />
          </Stack>
          
          <PrimaryButton text="Entrar" mt="6" size="lg" type="submit" isLoading={formState.isSubmitting} />
        </Flex>
      
      </Flex>
    </>
  )
}

export default Home
function submitForm() {
  throw new Error('Function not implemented.');
}

